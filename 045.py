"""
Project Euler Problem #45
==========================

Triangle, pentagonal, and hexagonal numbers are generated by the following
formulae:

Triangle     T[n]=n(n+1)/2   1, 3, 6, 10, 15, ...
Pentagonal   P[n]=n(3n-1)/2  1, 5, 12, 22, 35, ...
Hexagonal    H[n]=n(2n-1)    1, 6, 15, 28, 45, ...

It can be verified that T[285] = P[165] = H[143] = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
"""


from utils import *

T = lambda n: n*(n+1)/2
P = lambda n: n*(3*n-1)/2
H = lambda n: n*(2*n-1)

def generate(func, n=1):
    while True:
        yield func(n)
        n += 1


gens = [generate(T, 286), generate(P, 165), generate(H, 143)]
vals = [g.next() for g in gens]


while not all_equal(vals):
    i = min_index(vals)
    vals[i] = gens[i].next()

print vals[0]